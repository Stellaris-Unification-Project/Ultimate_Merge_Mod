namespace = credux_start

#Replace Starting HydroFarms with better ones (Photoelectrolysis)
country_event = {
	id = credux_start.1
	
	hide_window = yes
	is_triggered_only = yes
	
	trigger = {
		has_valid_civic = civic_photoelectrolysis
	}
	
	immediate = {
		every_owned_planet = {
			every_tile = {
				limit = {
					has_building = building_hydroponics_farm_1
				}
				set_building = building_power_hydroponics_farm_1
			}
		}
	}
}

#Add a Modifier that increases Habitability for your PRIMARY species. (Earthen Connection)
country_event = {
	id = credux_start.2
	
	hide_window = yes
	is_triggered_only = yes
	
	trigger = {
		has_valid_civic = civic_earthen_connection
	}
	
	immediate = {
		every_owned_planet = {
			every_owned_pop = {
				limit = {
					is_same_species = owner
				}
				add_modifier = {
					modifier = pop_deep_earthen_connection
				}
			}
		}
	}
}

#Caches - Provide your free bonuses!
country_event = {
	id = credux_start.3
	
	hide_window = yes
	is_triggered_only = yes
	
	immediate = {
		if = { #Traders
			limit = {
				has_valid_civic = civic_traders_cache
			}
			add_modifier = {
				modifier = enclave_traders_sr1
				days = 3600
			}
			add_modifier = {
				modifier = enclave_traders_sr2
				days = 3600
			}
			add_modifier = {
				modifier = enclave_traders_sr3
				days = 3600
			}
		}
		
		if = { #Artisans
			limit = {
				has_valid_civic = civic_artisans_cache
			}
			set_country_flag = artist_building_patron
			every_owned_planet = {
				limit = {
					is_capital = yes
				}
				random_tile = {
					limit = {
						has_blocker = yes
					}
					remove_blocker = yes
					set_building = "building_artist_patron"
				}
			}
		}
		
		if = { #Curators
			limit = {
				has_valid_civic = civic_curators_cache
			}
			add_physics_research = 600
			add_society_research = 600
			add_engineering_research = 600
		}
	}
}

#Divine Transcendence
country_event = {
	id = credux_start.4
	
	hide_window = yes
	is_triggered_only = yes
	
	trigger = {
		has_valid_civic = civic_divine_transcendence
	}
	
	immediate = {
		add_modifier = {
			modifier = dt_level_0
		}
		set_country_flag = dt_level_0
	}
}

#Mandate Of Heaven - Flag to check if you still have it.
country_event = {
	id = credux_start.5
	
	hide_window = yes
	is_triggered_only = yes
	
	trigger = {
		has_valid_civic = civic_mandate_of_heaven
	}
	
	immediate = {
		set_country_flag = mandate_of_heaven
		add_modifier = {
			modifier = mandate_approved
		}
	}
}

#Gift From The Gods - Make the capital into a Gaia world with 25 Tiles!
country_event = {
	id = credux_start.6
	
	hide_window = yes
	is_triggered_only = yes
	
	trigger = {
		OR = {
			has_valid_civic = civic_gift_from_the_gods
			has_valid_civic = civic_purifying_presense
		}
	}
	
	immediate = {
		every_owned_planet = {
			limit = {
				is_capital = yes
			}
			
			change_pc = pc_gaia
						
			while = {
				limit = {
					planet_size < 25
				}
				change_planet_size = 1
			}
			
			every_tile = { #Add more resources to the planet!
				if = { #Food
					limit = {
						has_resource = {
							type = food
							amount > 0
						}
					}
					random_list = {
						2 = {
							add_resource = {
								resource = food
								amount = 0
							}
						}
						2 = {
							add_resource = {
								resource = food
								amount = 1
							}
						}
						1 = {
							add_resource = {
								resource = food
								amount = 2
							}
						}
					}
				}
				if = { #Energy
					limit = {
						has_resource = {
							type = energy
							amount > 0
						}
					}
					random_list = {
						2 = {
							add_resource = {
								resource = energy
								amount = 0
							}
						}
						2 = {
							add_resource = {
								resource = energy
								amount = 1
							}
						}
						1 = {
							add_resource = {
								resource = energy
								amount = 2
							}
						}
					}
				}
				if = { #Minerals
					limit = {
						has_resource = {
							type = minerals
							amount > 0
						}
					}
					random_list = {
						2 = {
							add_resource = {
								resource = minerals
								amount = 0
							}
						}
						2 = {
							add_resource = {
								resource = minerals
								amount = 1
							}
						}
						1 = {
							add_resource = {
								resource = minerals
								amount = 2
							}
						}
					}
				}
				if = { #Physics
					limit = {
						has_resource = {
							type = physics_research
							amount > 0
						}
					}
					random_list = {
						2 = {
							add_resource = {
								resource = physics_research
								amount = 0
							}
						}
						2 = {
							add_resource = {
								resource = physics_research
								amount = 1
							}
						}
						1 = {
							add_resource = {
								resource = physics_research
								amount = 2
							}
						}
					}
				}
				if = { #Society
					limit = {
						has_resource = {
							type = society_research
							amount > 0
						}
					}
					random_list = {
						2 = {
							add_resource = {
								resource = society_research
								amount = 0
							}
						}
						2 = {
							add_resource = {
								resource = society_research
								amount = 1
							}
						}
						1 = {
							add_resource = {
								resource = society_research
								amount = 2
							}
						}
					}
				}
				if = { #Engineering
					limit = {
						has_resource = {
							type = engineering_research
							amount > 0
						}
					}
					random_list = {
						2 = {
							add_resource = {
								resource = engineering_research
								amount = 0
							}
						}
						2 = {
							add_resource = {
								resource = engineering_research
								amount = 1
							}
						}
						1 = {
							add_resource = {
								resource = engineering_research
								amount = 2
							}
						}
					}
				}
				if = {
				limit = {
					NOR = {
						has_resource = {
							type = energy
							amount > 0
						}
						has_resource = {
							type = food
							amount > 0
						}
						has_resource = {
							type = minerals
							amount > 0
						}
						has_resource = {
							type = physics_research
							amount > 0
						}
						has_resource = {
							type = society_research
							amount > 0
						}
						has_resource = {
							type = engineering_research
							amount > 0
						}
					}
				}
				random_list = { #Add 1-3 of a resource, or none at all.
					1 = { #Food
						random_list = {
							3 = {
								add_resource = {
									resource = food
									amount = 1
								}
							}
							2 = {
								add_resource = {
									resource = food
									amount = 2
								}
							}
							1 = {
								add_resource = {
									resource = food
									amount = 3
								}
							}
						}
					}
					1 = { #Minerals
						random_list = {
							3 = {
								add_resource = {
									resource = minerals
									amount = 1
								}
							}
							2 = {
								add_resource = {
									resource = minerals
									amount = 2
								}
							}
							1 = {
								add_resource = {
									resource = minerals
									amount = 3
								}
							}
						}
					}
					1 = { #Energy
						random_list = {
							3 = {
								add_resource = {
									resource = energy
									amount = 1
								}
							}
							2 = {
								add_resource = {
									resource = energy
									amount = 2
								}
							}
							1 = {
								add_resource = {
									resource = energy
									amount = 3
								}
							}
						}
					} 
					1 = { #Physics Research
						random_list = {
							3 = {
								add_resource = {
									resource = physics_research
									amount = 1
								}
							}
							2 = {
								add_resource = {
									resource = physics_research
									amount = 2
								}
							}
							1 = {
								add_resource = {
									resource = physics_research
									amount = 3
								}
							}
						}
					}
					1 = { #Society Research
						random_list = {
							3 = {
								add_resource = {
									resource = society_research
									amount = 1
								}
							}
							2 = {
								add_resource = {
									resource = society_research
									amount = 2
								}
							}
							1 = {
								add_resource = {
									resource = society_research
									amount = 3
								}
							}
						}
					}
					1 = { #Engineering Research
						random_list = {
							3 = {
								add_resource = {
									resource = engineering_research
									amount = 1
								}
							}
							2 = {
								add_resource = {
									resource = engineering_research
									amount = 2
								}
							}
							1 = {
								add_resource = {
									resource = engineering_research
									amount = 3
								}
							}
						}
					}
					2 = { #Do nothing
					
					}
				}
				}
			}
		}
	}
}

#if Space brotha primitive
country_event = {
	id = credux_start.666
	
	hide_window = yes
	is_triggered_only = yes
	
	trigger = {
		OR = {
			has_civic = civic_young_space_brothers
		}
	}
	
	immediate = {
		random_system_within_border = {
		limit = { starting_system = yes }
			random_system_planet = {
						limit = { 
							is_planet_class = pc_barren_puttano
							}
				while = {
					limit = {
						planet_size > 15
					}
					random_list = {
						50 = {
							change_planet_size = -1
						}
						50 = {
							change_planet_size = -2
						}
					}
				}
				while = {
					limit = {
						planet_size < 13
					}
					random_list = {
						50 = {
							change_planet_size = 1
						}
						50 = {
							change_planet_size = 2
						}
					}
				}
						change_pc = rl_habitable_normal
						len_create_species = yes
			prevent_anomaly = yes
			
			random_list = {
				# Industrial Civilization
				85 = {
					create_species = {
						name = random
						class = random
						portrait = random
						homeworld = THIS
						traits = {
							trait = random_traits
						}
					}
					create_country = {
						name = random
						authority = random
						civics = {
							civic = civic_increasing_urbanization
							civic = civic_atmospheric_pollution
						}
						species = last_created
						ethos = random
						flag = {
							icon = {
								category = "spherical"
								file = "flag_spherical_22.dds"
							}
							background= {
								category = "backgrounds"
								file = "new_dawn.dds"
							}
							colors={
								"turquoise"
								"green"
								"null"
								"null"
							}
						}
						type = primitive
					}
					last_created_country = {
						set_graphical_culture = industrial_01
						random_list = {
							5 = {
								set_country_flag = industrial_age 
								set_primitive_age = industrial_age
								change_country_flag = {
									icon = {
										category = "special"
										file = "primitive.dds"
									}
									background= {
										category = "backgrounds"
										file = "new_dawn.dds"
									}
									colors={
										"beige"
										"yellow"
										"null"
										"null"
									}
								}
							}
							30 = { 
								set_country_flag = machine_age
								set_primitive_age = machine_age
								change_country_flag = {
									icon = {
										category = "special"
										file = "primitive.dds"
									}
									background= {
										category = "backgrounds"
										file = "new_dawn.dds"
									}
									colors={
										"yellow"
										"orange"
										"null"
										"null"
									}
								}
							}
							35 = { 
								set_country_flag = atomic_age 
								set_primitive_age = atomic_age
								change_country_flag = {
									icon = {
										category = "special"
										file = "primitive.dds"
									}
									background= {
										category = "backgrounds"
										file = "new_dawn.dds"
									}
									colors={
										"beige"
										"brown"
										"null"
										"null"
									}
								}
							}
							30 = { 
								set_country_flag = early_space_age 
								set_primitive_age = early_space_age
								change_country_flag = {
									icon = {
										category = "special"
										file = "primitive.dds"
									}
									background= {
										category = "backgrounds"
										file = "new_dawn.dds"
									}
									colors={
										"grey"
										"dark_grey"
										"null"
										"null"
									}
								}
							}
						}
					}
					create_colony = {
						owner = last_created_country
						species = last_created
						ethos = owner
					}
					random_tile = {
						limit = { has_building = "building_colony_shelter" }
						remove_building = yes
					}
					every_tile = {
						limit = {
							has_blocker = yes
						}
						remove_blocker = yes
					}
					while = {
						count = 3			
						random_tile = {
							limit = {
								has_blocker = no
								has_building = no
								has_grown_pop = no
							}
							set_blocker = tb_decrepit_dwellings
						}
						random_tile = {
							limit = {
								has_blocker = no
								has_building = no
								has_grown_pop = no
							}
							set_blocker = tb_failing_infrastructure		
						}				
					}					
					while = {
						count = 5
						random_tile = {
							limit = {
								has_blocker = no
								has_grown_pop = no
								has_growing_pop = no
							}
							create_pop = {
								species = last_created
							}
						}	
					}
					if = {
						limit = {
							last_created_country = {
								OR = {
									has_country_flag = machine_age
									has_country_flag = atomic_age
									has_country_flag = early_space_age
								}
							}
						}
						random_tile = {
							limit = {
								has_blocker = no
								has_grown_pop = no
								has_growing_pop = no
							}
							create_pop = {
								species = last_created
							}
						}						
					}	
					if = {
						limit = {
							last_created_country = {
								OR = {
									has_country_flag = machine_age
									has_country_flag = atomic_age
									has_country_flag = early_space_age
								}
							}
						}
						random_tile = {
							limit = { 
								has_blocker = no 
								has_building = no 
								has_grown_pop = yes
							}
							set_building = "building_primitive_factory"
							add_resource = {
								resource = minerals
								amount = 1
								replace = yes
							}						
						}						
					}					
					if = {
						limit = {
							last_created_country = {
								has_country_flag = early_space_age
							}
						}
						random_tile = {
							limit = {
								has_blocker = no
								has_grown_pop = no
								has_growing_pop = no
							}
							create_pop = {
								species = last_created
							}
						}						
					}	
					if = {
						limit = {
							last_created_country = {
								has_country_flag = early_space_age
							}
						}
						random_tile = {
							limit = { 
								has_blocker = no 
								has_building = no 
								has_grown_pop = yes
							}
							set_building = "building_primitive_factory"
							add_resource = {
								resource = minerals
								amount = 1
								replace = yes
							}						
						}						
					}						
					while = {
						count = 2
						random_tile = {
							limit = { 
								has_blocker = no 
								has_building = no 
								has_grown_pop = yes
							}
							set_building = "building_primitive_factory"
							add_resource = {
								resource = minerals
								amount = 1
								replace = yes
							}						
						}					
					}
					while = {
						count = 4
						random_tile = {
							limit = { 
								has_blocker = no 
								has_building = no 
								has_grown_pop = yes
							}
							set_building = "building_primitive_farm"
							add_resource = {
								resource = food
								amount = 1
								replace = yes
							}						
						}					
					}
					last_created_country = {
						if = {
							limit = { has_country_flag = industrial_age }
							PREV = {
								while = {
									count = 4
									create_army = {
										name = "NAME_Industrial_Army"
										owner = last_created
										species = last_created
										type = "industrial_army"
									}
								}
							}
							break = yes
						}
						if = {
							limit = { has_country_flag = machine_age }
							PREV = {
								while = {
									count = 5
									create_army = {
										name = "NAME_Industrial_Army"
										owner = last_created
										species = last_created
										type = "industrial_army"
									}
								}
							}
							break = yes
						}
						if = {
							limit = { has_country_flag = atomic_age }
							PREV = {
								while = {
									count = 4
									create_army = {
										name = "NAME_Post-Atomic_Army"
										owner = last_created
										species = last_created
										type = "postatomic_army"
									}
								}
							}
							break = yes
						}
						if = {
							limit = { has_country_flag = early_space_age }
							PREV = {
								while = {
									count = 5
									create_army = {
										name = "NAME_Post-Atomic_Army"
										owner = last_created
										species = last_created
										type = "postatomic_army"
									}
								}
								create_fleet = {
									name = "NAME_Space_Station" 
									effect = {
										set_owner = last_created_country
										create_ship = {
											name = "NAME_Space_Station"
											design = "NAME_Space_Station"
										}
										set_location = PREV
									}
								}
							}
							break = yes
						}
					}
				}
				# Medieval Civilization
				15 = {
					create_species = {
						name = random
						class = random
						portrait = random
						homeworld = THIS
						traits = {
							trait = random_traits
						}
					}
					create_country = {
						name = random
						authority = random
						civics = {
							civic = civic_landed_nobility
							civic = civic_flat_world_theory
						}
						species = last_created
						ethos = random
						flag = {
							icon = {
								category = "special"
								file = "primitive.dds"
							}
							background= {
								category = "backgrounds"
								file = "new_dawn.dds"
							}
							colors={
								"turquoise"
								"green"
								"null"
								"null"
							}
						}
						type = primitive
					}
					last_created_country = {
						set_graphical_culture = preindustrial_01
							
								set_country_flag = steam_age 
								set_primitive_age = steam_age
								change_country_flag = {
									icon = {
										category = "special"
										file = "primitive.dds"
									}
									background= {
										category = "backgrounds"
										file = "new_dawn.dds"
									}
									colors={
										"orange"
										"red"
										"null"
										"null"
									}
								}
							}
					}
					create_colony = {
						owner = last_created_country
						species = last_created
						ethos = owner
					}
					random_tile = {
						limit = {
							has_blocker = no
							has_grown_pop = no
							has_growing_pop = no
						}
						create_pop = {
							species = last_created
						}
					}
					if = {
						limit = {
							last_created_country = {
								OR = {
									has_country_flag = steam_age
									has_country_flag = renaissance_age
								}
							}
						}
						random_tile = {
							limit = {
								has_blocker = no
								has_grown_pop = no
								has_growing_pop = no
							}
							create_pop = {
								species = last_created
							}
						}						
					}
					random_tile = {
						limit = { has_building = "building_colony_shelter" }
						remove_building = yes
					}					
					while = {
						count = 2
						random_tile = {
							limit = { 
								has_blocker = no 
								has_building = no 
								has_grown_pop = yes
							}
							set_building = "building_primitive_farm"										
							add_resource = {
								resource = food
								amount = 1
								replace = yes
							}
						}
					}
					if = {
						limit = {
							last_created_country = {
								has_country_flag = stone_age
							}
						}	
						every_tile = {
							limit = {
								has_building = "building_primitive_farm"
							}
							remove_building = yes
						}
					}
					if = {
						limit = {
							last_created_country = {
								OR = {
									has_country_flag = iron_age 
									has_country_flag = late_medieval_age 									
									has_country_flag = renaissance_age
									has_country_flag = steam_age
								}
							}
						}
						random_tile = {
							limit = {
								has_blocker = no
								has_grown_pop = no
								has_growing_pop = no
							}
							create_pop = {
								species = last_created
							}
						}						
						random_tile = {
							limit = { 
								has_blocker = no 
								has_building = no 
								has_grown_pop = yes
							}
							set_building = "building_primitive_farm"
							add_resource = {
								resource = food
								amount = 1
								replace = yes
							}
						}						
					}					
					if = {
						limit = {
							last_created_country = {
								OR = {
									has_country_flag = steam_age
									has_country_flag = renaissance_age
								}
							}
						}
						random_tile = {
							limit = { 
								has_blocker = no 
								has_building = no 
								has_grown_pop = yes
							}
							set_building = "building_primitive_farm"
							add_resource = {
								resource = food
								amount = 1
								replace = yes
							}
						}						
					}
					if = {
						limit = {
							last_created_country = {
								has_country_flag = steam_age
							}
						}
						random_tile = {
							limit = { 
								has_blocker = no 
								has_building = no 
								has_grown_pop = yes
							}
							set_building = "building_primitive_factory"
							add_resource = {
								resource = minerals
								amount = 1
								replace = yes
							}						
						}						
					}					
					last_created_country = {
						if = {
							limit = { has_country_flag = stone_age }
							PREV = {
								create_army = {
									name = "NAME_Primitive_Army"
									owner = last_created
									species = last_created
									type = "primitive_army"
								}
							}
							break = yes
						}					
						if = {
							limit = { has_country_flag = bronze_age }
							PREV = {
								create_army = {
									name = "NAME_Primitive_Army"
									owner = last_created
									species = last_created
									type = "primitive_army"
								}
							}
							break = yes
						}
						if = {
							limit = { has_country_flag = iron_age }
							PREV = {
								while = {
									count = 2
									create_army = {
										name = "NAME_Primitive_Army"
										owner = last_created
										species = last_created
										type = "primitive_army"
									}
								}
							}
							break = yes
						}
						if = {
							limit = { has_country_flag = late_medieval_age }
							PREV = {
								while = {
									count = 3
									create_army = {
										name = "NAME_Primitive_Army"
										owner = last_created
										species = last_created
										type = "primitive_army"
									}
								}
							}
							break = yes
						}
						if = {
							limit = { has_country_flag = renaissance_age }
							PREV = {
								while = {
									count = 4
									create_army = {
										name = "NAME_Primitive_Army"
										owner = last_created
										species = last_created
										type = "primitive_army"
									}
								}
							}
							break = yes
						}
						if = {
							limit = { has_country_flag = steam_age }
							PREV = {
								while = {
									count = 3
									create_army = {
										name = "NAME_Industrial_Army"
										owner = last_created
										species = last_created
										type = "industrial_army"
									}
								}
							}
							break = yes
						}
					}
				}
					}
			random_system_planet = { #First find a suitable world within your borders (We don't want gas giants or asteroids. Everything else is fair game.)
				limit = {
						is_homeworld = yes
						is_owned_by = ROOT
				}
			if = {
				limit = { has_moon = yes }
				random_moon = {
				while = {
					limit = {
						planet_size > 15
					}
					random_list = {
						50 = {
							change_planet_size = -1
						}
						50 = {
							change_planet_size = -2
						}
					}
				}
				while = {
					limit = {
						planet_size < 13
					}
					random_list = {
						50 = {
							change_planet_size = 1
						}
						50 = {
							change_planet_size = 2
						}
					}
				}
						change_pc = rl_habitable_normal
		len_create_species = yes
			prevent_anomaly = yes
			
			random_list = {
				# Industrial Civilization
				85 = {
					create_species = {
						name = random
						class = random
						portrait = random
						homeworld = THIS
						traits = {
							trait = random_traits
						}
					}
					create_country = {
						name = random
						authority = random
						civics = {
							civic = civic_increasing_urbanization
							civic = civic_atmospheric_pollution
						}
						species = last_created
						ethos = random
						flag = {
							icon = {
								category = "spherical"
								file = "flag_spherical_22.dds"
							}
							background= {
								category = "backgrounds"
								file = "new_dawn.dds"
							}
							colors={
								"turquoise"
								"green"
								"null"
								"null"
							}
						}
						type = primitive
					}
					last_created_country = {
						set_graphical_culture = industrial_01
						random_list = {
							5 = {
								set_country_flag = industrial_age 
								set_primitive_age = industrial_age
								change_country_flag = {
									icon = {
										category = "special"
										file = "primitive.dds"
									}
									background= {
										category = "backgrounds"
										file = "new_dawn.dds"
									}
									colors={
										"beige"
										"yellow"
										"null"
										"null"
									}
								}
							}
							30 = { 
								set_country_flag = machine_age
								set_primitive_age = machine_age
								change_country_flag = {
									icon = {
										category = "special"
										file = "primitive.dds"
									}
									background= {
										category = "backgrounds"
										file = "new_dawn.dds"
									}
									colors={
										"yellow"
										"orange"
										"null"
										"null"
									}
								}
							}
							35 = { 
								set_country_flag = atomic_age 
								set_primitive_age = atomic_age
								change_country_flag = {
									icon = {
										category = "special"
										file = "primitive.dds"
									}
									background= {
										category = "backgrounds"
										file = "new_dawn.dds"
									}
									colors={
										"beige"
										"brown"
										"null"
										"null"
									}
								}
							}
							30 = { 
								set_country_flag = early_space_age 
								set_primitive_age = early_space_age
								change_country_flag = {
									icon = {
										category = "special"
										file = "primitive.dds"
									}
									background= {
										category = "backgrounds"
										file = "new_dawn.dds"
									}
									colors={
										"grey"
										"dark_grey"
										"null"
										"null"
									}
								}
							}
						}
					}
					create_colony = {
						owner = last_created_country
						species = last_created
						ethos = owner
					}
					random_tile = {
						limit = { has_building = "building_colony_shelter" }
						remove_building = yes
					}
					every_tile = {
						limit = {
							has_blocker = yes
						}
						remove_blocker = yes
					}
					while = {
						count = 3			
						random_tile = {
							limit = {
								has_blocker = no
								has_building = no
								has_grown_pop = no
							}
							set_blocker = tb_decrepit_dwellings
						}
						random_tile = {
							limit = {
								has_blocker = no
								has_building = no
								has_grown_pop = no
							}
							set_blocker = tb_failing_infrastructure		
						}				
					}					
					while = {
						count = 5
						random_tile = {
							limit = {
								has_blocker = no
								has_grown_pop = no
								has_growing_pop = no
							}
							create_pop = {
								species = last_created
							}
						}	
					}
					if = {
						limit = {
							last_created_country = {
								OR = {
									has_country_flag = machine_age
									has_country_flag = atomic_age
									has_country_flag = early_space_age
								}
							}
						}
						random_tile = {
							limit = {
								has_blocker = no
								has_grown_pop = no
								has_growing_pop = no
							}
							create_pop = {
								species = last_created
							}
						}						
					}	
					if = {
						limit = {
							last_created_country = {
								OR = {
									has_country_flag = machine_age
									has_country_flag = atomic_age
									has_country_flag = early_space_age
								}
							}
						}
						random_tile = {
							limit = { 
								has_blocker = no 
								has_building = no 
								has_grown_pop = yes
							}
							set_building = "building_primitive_factory"
							add_resource = {
								resource = minerals
								amount = 1
								replace = yes
							}						
						}						
					}					
					if = {
						limit = {
							last_created_country = {
								has_country_flag = early_space_age
							}
						}
						random_tile = {
							limit = {
								has_blocker = no
								has_grown_pop = no
								has_growing_pop = no
							}
							create_pop = {
								species = last_created
							}
						}						
					}	
					if = {
						limit = {
							last_created_country = {
								has_country_flag = early_space_age
							}
						}
						random_tile = {
							limit = { 
								has_blocker = no 
								has_building = no 
								has_grown_pop = yes
							}
							set_building = "building_primitive_factory"
							add_resource = {
								resource = minerals
								amount = 1
								replace = yes
							}						
						}						
					}						
					while = {
						count = 2
						random_tile = {
							limit = { 
								has_blocker = no 
								has_building = no 
								has_grown_pop = yes
							}
							set_building = "building_primitive_factory"
							add_resource = {
								resource = minerals
								amount = 1
								replace = yes
							}						
						}					
					}
					while = {
						count = 4
						random_tile = {
							limit = { 
								has_blocker = no 
								has_building = no 
								has_grown_pop = yes
							}
							set_building = "building_primitive_farm"
							add_resource = {
								resource = food
								amount = 1
								replace = yes
							}						
						}					
					}
					last_created_country = {
						if = {
							limit = { has_country_flag = industrial_age }
							PREV = {
								while = {
									count = 4
									create_army = {
										name = "NAME_Industrial_Army"
										owner = last_created
										species = last_created
										type = "industrial_army"
									}
								}
							}
							break = yes
						}
						if = {
							limit = { has_country_flag = machine_age }
							PREV = {
								while = {
									count = 5
									create_army = {
										name = "NAME_Industrial_Army"
										owner = last_created
										species = last_created
										type = "industrial_army"
									}
								}
							}
							break = yes
						}
						if = {
							limit = { has_country_flag = atomic_age }
							PREV = {
								while = {
									count = 4
									create_army = {
										name = "NAME_Post-Atomic_Army"
										owner = last_created
										species = last_created
										type = "postatomic_army"
									}
								}
							}
							break = yes
						}
						if = {
							limit = { has_country_flag = early_space_age }
							PREV = {
								while = {
									count = 5
									create_army = {
										name = "NAME_Post-Atomic_Army"
										owner = last_created
										species = last_created
										type = "postatomic_army"
									}
								}
								create_fleet = {
									name = "NAME_Space_Station" 
									effect = {
										set_owner = last_created_country
										create_ship = {
											name = "NAME_Space_Station"
											design = "NAME_Space_Station"
										}
										set_location = PREV
									}
								}
							}
							break = yes
						}
					}
				}
				# Medieval Civilization
				15 = {
					create_species = {
						name = random
						class = random
						portrait = random
						homeworld = THIS
						traits = {
							trait = random_traits
						}
					}
					create_country = {
						name = random
						authority = random
						civics = {
							civic = civic_landed_nobility
							civic = civic_flat_world_theory
						}
						species = last_created
						ethos = random
						flag = {
							icon = {
								category = "special"
								file = "primitive.dds"
							}
							background= {
								category = "backgrounds"
								file = "new_dawn.dds"
							}
							colors={
								"turquoise"
								"green"
								"null"
								"null"
							}
						}
						type = primitive
					}
					last_created_country = {
						set_graphical_culture = preindustrial_01
							
								set_country_flag = steam_age 
								set_primitive_age = steam_age
								change_country_flag = {
									icon = {
										category = "special"
										file = "primitive.dds"
									}
									background= {
										category = "backgrounds"
										file = "new_dawn.dds"
									}
									colors={
										"orange"
										"red"
										"null"
										"null"
									}
								}
							}
					}
					create_colony = {
						owner = last_created_country
						species = last_created
						ethos = owner
					}
					random_tile = {
						limit = {
							has_blocker = no
							has_grown_pop = no
							has_growing_pop = no
						}
						create_pop = {
							species = last_created
						}
					}
					if = {
						limit = {
							last_created_country = {
								OR = {
									has_country_flag = steam_age
									has_country_flag = renaissance_age
								}
							}
						}
						random_tile = {
							limit = {
								has_blocker = no
								has_grown_pop = no
								has_growing_pop = no
							}
							create_pop = {
								species = last_created
							}
						}						
					}
					random_tile = {
						limit = { has_building = "building_colony_shelter" }
						remove_building = yes
					}					
					while = {
						count = 2
						random_tile = {
							limit = { 
								has_blocker = no 
								has_building = no 
								has_grown_pop = yes
							}
							set_building = "building_primitive_farm"										
							add_resource = {
								resource = food
								amount = 1
								replace = yes
							}
						}
					}
					if = {
						limit = {
							last_created_country = {
								has_country_flag = stone_age
							}
						}	
						every_tile = {
							limit = {
								has_building = "building_primitive_farm"
							}
							remove_building = yes
						}
					}
					if = {
						limit = {
							last_created_country = {
								OR = {
									has_country_flag = iron_age 
									has_country_flag = late_medieval_age 									
									has_country_flag = renaissance_age
									has_country_flag = steam_age
								}
							}
						}
						random_tile = {
							limit = {
								has_blocker = no
								has_grown_pop = no
								has_growing_pop = no
							}
							create_pop = {
								species = last_created
							}
						}						
						random_tile = {
							limit = { 
								has_blocker = no 
								has_building = no 
								has_grown_pop = yes
							}
							set_building = "building_primitive_farm"
							add_resource = {
								resource = food
								amount = 1
								replace = yes
							}
						}						
					}					
					if = {
						limit = {
							last_created_country = {
								OR = {
									has_country_flag = steam_age
									has_country_flag = renaissance_age
								}
							}
						}
						random_tile = {
							limit = { 
								has_blocker = no 
								has_building = no 
								has_grown_pop = yes
							}
							set_building = "building_primitive_farm"
							add_resource = {
								resource = food
								amount = 1
								replace = yes
							}
						}						
					}
					if = {
						limit = {
							last_created_country = {
								has_country_flag = steam_age
							}
						}
						random_tile = {
							limit = { 
								has_blocker = no 
								has_building = no 
								has_grown_pop = yes
							}
							set_building = "building_primitive_factory"
							add_resource = {
								resource = minerals
								amount = 1
								replace = yes
							}						
						}						
					}					
					last_created_country = {
						if = {
							limit = { has_country_flag = stone_age }
							PREV = {
								create_army = {
									name = "NAME_Primitive_Army"
									owner = last_created
									species = last_created
									type = "primitive_army"
								}
							}
							break = yes
						}					
						if = {
							limit = { has_country_flag = bronze_age }
							PREV = {
								create_army = {
									name = "NAME_Primitive_Army"
									owner = last_created
									species = last_created
									type = "primitive_army"
								}
							}
							break = yes
						}
						if = {
							limit = { has_country_flag = iron_age }
							PREV = {
								while = {
									count = 2
									create_army = {
										name = "NAME_Primitive_Army"
										owner = last_created
										species = last_created
										type = "primitive_army"
									}
								}
							}
							break = yes
						}
						if = {
							limit = { has_country_flag = late_medieval_age }
							PREV = {
								while = {
									count = 3
									create_army = {
										name = "NAME_Primitive_Army"
										owner = last_created
										species = last_created
										type = "primitive_army"
									}
								}
							}
							break = yes
						}
						if = {
							limit = { has_country_flag = renaissance_age }
							PREV = {
								while = {
									count = 4
									create_army = {
										name = "NAME_Primitive_Army"
										owner = last_created
										species = last_created
										type = "primitive_army"
									}
								}
							}
							break = yes
						}
						if = {
							limit = { has_country_flag = steam_age }
							PREV = {
								while = {
									count = 3
									create_army = {
										name = "NAME_Industrial_Army"
										owner = last_created
										species = last_created
										type = "industrial_army"
									}
								}
							}
							break = yes
						}
					}
				}
			}
				}
			}
				}
			}
			}



#Space brotha
#country_event = {
#	id = credux_start.768
#	
#	hide_window = yes
#	is_triggered_only = yes
#	
#	trigger = {
#		OR = {
#			has_valid_civic = civic_one_small_step
#		}
#	}
#	
#	immediate = {
#		random_system_within_border = {
#		limit = { starting_system = yes }
#		random_system_planet = { #First find a suitable world within your borders (We don't want gas giants or asteroids. Everything else is fair game.)
#			limit = {
#				OR = {
#					is_planet_class = rl_habitable_caino
#				}
#				
#			}
#			
#		}
#	}
#	}
#}

#One Small Step - Make a colony!
country_event = {
	id = credux_start.7
	
	hide_window = yes
	is_triggered_only = yes
	
	trigger = {
		OR = {
			has_valid_civic = civic_nest_builders
			has_valid_civic = civic_one_small_step
		}
	}
	
	immediate = {
	random_system_within_border = {
		limit = { starting_system = yes }
		random_system_planet = { #First find a suitable world within your borders (We don't want gas giants or asteroids. Everything else is fair game.)
			limit = {
				OR = {
					is_planet_class = pc_molten
					is_planet_class = pc_barren
					is_planet_class = pc_frozen
					is_planet_class = pc_barren_cold
					is_planet_class = pc_toxic
				}
				is_capital = no #We don't want to overwrite our own capital by accident!
			}
			if = { #Gaia Planets are fine! Carry on with the event.
				limit = {
					is_planet_class = pc_gaia
				}
				else = { #If it isn't a Gaia Planet we need to make it ideal for the founding species
					if = { #ARID
						limit = {
							ROOT = {
								has_trait = trait_pc_arid_preference
							}
							NOT = { #Just in case the planet class isn't already Arid
								is_planet_class = pc_arid
							}
						}
						change_pc = pc_arid
					}
					if = { #DESERT
						limit = {
							ROOT = {
							has_trait = trait_pc_desert_preference
							}
							NOT = { #Just in case the planet class isn't already Desert
								is_planet_class = pc_desert
							}
						}
						change_pc = pc_desert
					}
					if = { #SAVANNAH
						limit = {
							ROOT = {
							has_trait = trait_pc_savannah_preference
							}
							NOT = { #Just in case the planet class isn't already Savannah
								is_planet_class = pc_savannah
							}
						}
						change_pc = pc_savannah
					}
					if = { #CONTINENTAL
						limit = {
							ROOT = {
							has_trait = trait_pc_continental_preference
							}
							NOT = { #Just in case the planet class isn't already Continental
								is_planet_class = pc_continental
							}
						}
						change_pc = pc_continental
					}
					if = { #OCEAN
						limit = {
							ROOT = {
							has_trait = trait_pc_ocean_preference
							}
							NOT = { #Just in case the planet class isn't already Ocean
								is_planet_class = pc_ocean
							}
						}
						change_pc = pc_ocean
					}
					if = { #TROPICAL
						limit = {
							ROOT = {
							has_trait = trait_pc_tropical_preference
							}
							NOT = { #Just in case the planet class isn't already Tropical
								is_planet_class = pc_tropical
							}
						}
						change_pc = pc_tropical
					}
					if = { #TUNDRA
						limit = {
							ROOT = {
							has_trait = trait_pc_tundra_preference
							}
							NOT = { #Just in case the planet class isn't already Tundra
								is_planet_class = pc_tundra
							}
						}
						change_pc = pc_tundra
					}
					if = { #ARCTIC
						limit = {
							ROOT = {
							has_trait = trait_pc_arctic_preference
							}
							NOT = { #Just in case the planet class isn't already Arctic
								is_planet_class = pc_arctic
							}
						}
						change_pc = pc_arctic
					}
					if = { #ALPINE
						limit = {
							ROOT = {
							has_trait = trait_pc_alpine_preference
							}
							NOT = { #Just in case the planet class isn't already Alpine
								is_planet_class = pc_alpine
							}
						}
						change_pc = pc_alpine
					}
					if = { #GLACIAL
						limit = {
							ROOT = {
								has_trait = trait_pc_glacial_preference
							}
							NOT = { #Just in case the planet class isn't already Glacial
								is_planet_class = pc_glacial
							}
						}
						change_pc = pc_glacial
					}
					if = { #FROZEN DESERT
						limit = {
							ROOT = {
							has_trait = trait_pc_frozen_desert_preference
							}
							NOT = { #Just in case the planet class isn't already Frozen Desert
								is_planet_class = pc_frozen_desert
							}
						}
						change_pc = pc_frozen_desert
					}
					if = { #STEPPE
						limit = {
							ROOT = {
							has_trait = trait_pc_steppe_preference
							}
							NOT = { #Just in case the planet class isn't already Steppe
								is_planet_class = pc_steppe
							}
						}
						change_pc = pc_steppe
					}
					if = { #HADESERT
						limit = {
							ROOT = {
							has_trait = trait_pc_hadesert_preference
							}
							NOT = { #Just in case the planet class isn't already HADesert
								is_planet_class = pc_hadesert
							}
						}
						change_pc = pc_hadesert
					}
					if = { #ANTARCTIC
						limit = {
							ROOT = {
							has_trait = trait_pc_antarctic_preference
							}
							NOT = { #Just in case the planet class isn't already Antarctic
								is_planet_class = pc_antarctic
							}
						}
						change_pc = pc_antarctic
					}
					if = { #SANDSEA
						limit = {
							ROOT = {
							has_trait = trait_pc_sandsea_preference
							}
							NOT = { #Just in case the planet class isn't already Sandsea
								is_planet_class = pc_sandsea
							}
						}
						change_pc = pc_sandsea
					}
					if = { #SUBARCTIC
						limit = {
							ROOT = {
							has_trait = trait_pc_subarctic_preference
							}
							NOT = { #Just in case the planet class isn't already Subarctic
								is_planet_class = pc_subarctic
							}
						}
						change_pc = pc_subarctic
					}
					if = { #GEOTHERMAL
						limit = {
							ROOT = {
							has_trait = trait_pc_geothermal_preference
							}
							NOT = { #Just in case the planet class isn't already Geothermal
								is_planet_class = pc_geothermal
							}
						}
						change_pc = pc_geothermal
					}
					if = { #CASCADIAN
						limit = {
							ROOT = {
							has_trait = trait_pc_cascadian_preference
							}
							NOT = { #Just in case the planet class isn't already Cascadian
								is_planet_class = pc_cascadian
							}
						}
						change_pc = pc_cascadian
					}
					if = { #SWAMP
						limit = {
							ROOT = {
								has_trait = trait_pc_swamp_preference
							}
							NOT = { #Just in case the planet class isn't already Swamp
								is_planet_class = pc_swamp
							}
						}
						change_pc = pc_swamp
					}
					if = { #MANGROVE
						limit = {
							ROOT = {
							has_trait = trait_pc_mangrove_preference
							}
							NOT = { #Just in case the planet class isn't already Mangrove
								is_planet_class = pc_mangrove
							}
						}
						change_pc = pc_mangrove
					}
					if = { #DESERTISLANDS
						limit = {
							ROOT = {
							has_trait = trait_pc_desertislands_preference
							}
							NOT = { #Just in case the planet class isn't already Desert Islands
								is_planet_class = pc_desertislands
							}
						}
						change_pc = pc_desertislands
					}
					if = { #MESA
						limit = {
							ROOT = {
							has_trait = trait_pc_mesa_preference
							}
							NOT = { #Just in case the planet class isn't already Mesa
								is_planet_class = pc_mesa
							}
						}
						change_pc = pc_mesa
					}
					if = { #OASIS
						limit = {
							ROOT = {
							has_trait = trait_pc_oasis_preference
							}
							NOT = { #Just in case the planet class isn't already Oasis
								is_planet_class = pc_oasis
							}
						}
						change_pc = pc_oasis
					}
					if = { #HAJUNGLE
						limit = {
							ROOT = {
							has_trait = trait_pc_hajungle_preference
							}
							NOT = { #Just in case the planet class isn't already HAJungle
								is_planet_class = pc_hajungle
							}
						}
						change_pc = pc_hajungle
					}
					if = { #METHANE
						limit = {
							ROOT = {
							has_trait = trait_pc_methane_preference
							}
							NOT = { #Just in case the planet class isn't already Methane
								is_planet_class = pc_methane
							}
						}
						change_pc = pc_methane
					}
					if = { #AMMONIA
						limit = {
							ROOT = {
							has_trait = trait_pc_ammonia_preference
							}
							NOT = { #Just in case the planet class isn't already Ammonia
								is_planet_class = pc_ammonia
							}
						}
						change_pc = pc_ammonia
					}
				}
			}
			
			every_tile = { #Clear out the planet's resources and tile blockers. We'll re-add resources later, when the planet size is right.
				clear_deposits = yes
				remove_blocker = yes
			}
			
			if = { #We want at least 16 tiles on our planet
				limit = {
					planet_size < 16
				}
				while = {
					limit = {
						planet_size < 16
					}
					change_planet_size = 1
				}
			}
				
			if = { #We want less than 26 tiles on our planet
				limit = {
					planet_size > 20
				}
				while = {
					limit = {
						planet_size > 20
					}
					change_planet_size = -1
				}
			}
			
			every_tile = { #Now we have our ideal planet size, we can add resources back to make it a feasible colony
				random_list = { #Add 1-3 of a resource, or none at all.
					2 = { #Food
						random_list = {
							3 = {
								add_resource = {
									resource = food
									amount = 1
								}
							}
							2 = {
								add_resource = {
									resource = food
									amount = 2
								}
							}
							1 = {
								add_resource = {
									resource = food
									amount = 3
								}
							}
						}
					}
					1.5 = { #Minerals
						random_list = {
							3 = {
								add_resource = {
									resource = minerals
									amount = 1
								}
							}
							2 = {
								add_resource = {
									resource = minerals
									amount = 2
								}
							}
							1 = {
								add_resource = {
									resource = minerals
									amount = 3
								}
							}
						}
					}
					1.5 = { #Energy
						random_list = {
							3 = {
								add_resource = {
									resource = energy
									amount = 1
								}
							}
							2 = {
								add_resource = {
									resource = energy
									amount = 2
								}
							}
							1 = {
								add_resource = {
									resource = energy
									amount = 3
								}
							}
						}
					} 
					1 = { #Physics Research
						random_list = {
							3 = {
								add_resource = {
									resource = physics_research
									amount = 1
								}
							}
							2 = {
								add_resource = {
									resource = physics_research
									amount = 2
								}
							}
							1 = {
								add_resource = {
									resource = physics_research
									amount = 3
								}
							}
						}
					}
					1 = { #Society Research
						random_list = {
							3 = {
								add_resource = {
									resource = society_research
									amount = 1
								}
							}
							2 = {
								add_resource = {
									resource = society_research
									amount = 2
								}
							}
							1 = {
								add_resource = {
									resource = society_research
									amount = 3
								}
							}
						}
					}
					1 = { #Engineering Research
						random_list = {
							3 = {
								add_resource = {
									resource = engineering_research
									amount = 1
								}
							}
							2 = {
								add_resource = {
									resource = engineering_research
									amount = 2
								}
							}
							1 = {
								add_resource = {
									resource = engineering_research
									amount = 3
								}
							}
						}
					}
					1 = { #Do nothing
						
					}
				}
			}
			
			create_colony = { #The planet is ready - make a colony!
				owner = root
				species = owner_main_species
				ethos = owner
			}
			
			while = {
				limit = {
					num_pops < 3
				}
				create_pop = {
					species = owner
					ethos = owner
				}
			}
		}
	}
	}
}


#Planet Forgers - Grant some basic technology.
country_event = {
	id = credux_start.8
	
	hide_window = yes
	is_triggered_only = yes
	
	trigger = {
		has_valid_civic = civic_planet_forgers
	}
	
	immediate = {
		give_technology = {
			message = no
			tech = tech_terrestrial_sculpting  
		}
	}
}

#Manifest Destiny
country_event = {
	id = credux_start.9
	
	hide_window = yes
	is_triggered_only = yes
	
	trigger = {
		has_valid_civic = civic_manifest_destiny
	}
	
	immediate = {
		set_country_flag = manifest_destiny_bonus_colony
	}
}

#Eco-Warriors
country_event = {
	id = credux_start.10
	
	hide_window = yes
	is_triggered_only = yes
	
	trigger = {
		has_valid_civic = civic_eco_warriors
	}
	
	immediate = {
		give_technology = {
			message = no
			tech = tech_tb_mountain_range
		}
		give_technology = {
			message = no
			tech = tech_tb_volcano
		}
		give_technology = {
			message = no
			tech = tech_tb_dangerous_wildlife
		}
		give_technology = {
			message = no
			tech = tech_tb_dense_jungle
		}
		give_technology = {
			message = no
			tech = tech_tb_quicksand_basin
		}
		give_technology = {
			message = no
			tech = tech_tb_noxious_swamp
		}
		give_technology = {
			message = no
			tech = tech_tb_massive_glacier
		}
		give_technology = {
			message = no
			tech = tech_tb_toxic_kelp
		}
		give_technology = {
			message = no
			tech = tech_tb_deep_sinkhole
		}
	}
}

country_event = {
	id = credux_start.77
	
	hide_window = yes
	is_triggered_only = yes
	
	trigger = {
			has_civic = civic_atom_cult
			has_civic = civic_syncretic_evolution
			has_ethic = ethic_militarist
			has_ethic = ethic_fanatic_spiritualist
			has_ethic = ethic_industrial
			has_ethic = ethic_authoritarian
			has_civic = civic_exalted_priesthood
	}
	
	immediate = {
		random_system_within_border = { #First find a suitable world within your borders (We don't want gas giants or asteroids. Everything else is fair game.)
			spawn_system = {
				initializer = special_init_01
				min_distance = 30
				max_distance = 30
				}
		}
		
	}
	
}


#Keepers Of Tradition - Free Unity for a Tradition!
country_event = {
	id = credux_start.11
	
	hide_window = yes
	is_triggered_only = yes
	
	trigger = {
		has_valid_civic = civic_keepers_of_tradition
	}
	
	immediate = {
		add_monthly_resource_mult = {
			resource = unity
			value = 1
			min = 100
			max = 100
		}
	}
}